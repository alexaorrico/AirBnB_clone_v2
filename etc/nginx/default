# Helpful NGINX DOCS
# Variables: http://nginx.org/en/docs/varindex.html
# Directives: http://nginx.org/en/docs/dirindex.html
# Regex: https://www.regextester.com/pregsyntax.html

# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	# root /usr/share/nginx/html;
	# index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;

	# add header to response to specifiy server 01
	add_header X-Served-By 123-web-01;

	# rewrite request_uri for fix with odd_even response codes
	if ($request_uri ~ ^/airbnb-dynamic/[\d+]) {
	   rewrite ^/airbnb-dynamic/(.*) /airbnb-dynamic/number_odd_or_even/$1 break;
	}

	# main root of website
	location / {
		 root /usr/share/nginx/html;
		 # First attempt to serve request as file, then
		 # as directory, then fall back to displaying a 404.
		 try_files $uri $uri/ =404;
		 # include proxy_params;
		 # rewrite ^/(.*) /$1 break;
		 # proxy_pass http://127.0.0.1:8002;
		 include /etc/nginx/mime.types;
		 index index.html;
		 # Uncomment to enable naxsi on this location
		 # include /etc/nginx/naxsi.rules
	}

	# web static basic configuration
	location /hbnb_static/ {
		 alias /data/web_static/current/;
		 index 103-index.html;
		 include /etc/nginx/mime.types;
	}

	# gunicorn configuration for airbnb-onepage
	location /airbnb-onepage/ {
		 include proxy_params;
		 rewrite ^/airbnb-onepage(.*) /$1 break;
		 proxy_pass http://127.0.0.1:8001;
	}

	# gunicorn configuration for airbnb dynamic content
	location /airbnb-dynamic/ {
		 include proxy_params;
		 rewrite ^/airbnb-dynamic(.*) /$1 break;
		 proxy_pass http://127.0.0.1:8002;
	}

	# config for static for full dynamic integration with mysql DB
	location /static/ {
		  include proxy_params;
		  proxy_pass http://127.0.0.1:8003/static/;
	}

	# gunicorn configuration for fully dynamic with mysql DB
	location /hbnb/ {
		 include proxy_params;
		 proxy_pass http://127.0.0.1:8003;
	}

	# gunicorn configuration for API Swagger (flasgger) DOCS
	location /api/ {
		 include proxy_params;
		 proxy_pass http://127.0.0.1:8004;
	}

	# gunicorn configuration for API Swagger (flasgger) DOCS
	location /apidocs/ {
		  include proxy_params;
		  proxy_pass http://127.0.0.1:8004;
	}

	# gunicorn configuration for API Swagger (flasgger) DOCS
	location /apispec_1.json {
		  include proxy_params;
		  proxy_pass http://127.0.0.1:8004;
	}

	# gunicorn configuration for API Swagger (flasgger) DOCS
	location /flasgger_static/ {
		  include proxy_params;
		  proxy_pass http://127.0.0.1:8004;
	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;
	#}

	# redirection example for page /redirect_me
	rewrite ^/redirect_me http://www.davidjohncoleman.com/ permanent;

	# handles 404 page errors
	error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
